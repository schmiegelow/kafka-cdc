version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:4.1.0
    ports:
      - '2181:2181'
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
          default:
            aliases:
              - zookeeper.internal-service
  kafka01.internal-service:
    image: confluentinc/cp-kafka:4.1.0
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper.internal-service:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka01.internal-service:9092
  kafka02.internal-service:
    image: confluentinc/cp-kafka:4.1.0
    depends_on:
      - zookeeper
    ports:
      - '9093:9093'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper.internal-service:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka02.internal-service:9093
  kafka03.internal-service:
    image: confluentinc/cp-kafka:4.1.0
    depends_on:
      - zookeeper
    ports:
      - '9094:9094'
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper.internal-service:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka03.internal-service:9094
  kafka-manager:
    image: sheepkiller/kafka-manager
    ports:
      - "9000:9000"
    hostname: kafka-manager.internal-service
    environment:
      ZK_HOSTS: zookeeper.internal-service:2181
      APPLICATION_SECRET: littlepig-letmein
      KM_VERSION: 1.3.3.17
    depends_on:
      - zookeeper
      - kafka01.internal-service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    ports:
      - 9200:9200
    environment:
      - xpack.security.enabled=false
      - cluster.name=sentiments
  kibana:
    image: docker.elastic.co/kibana/kibana:6.2.4
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
        - "5601:5601"
    depends_on:
      - elasticsearch
  mysql:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: confluent
      MYSQL_USER: confluent
      MYSQL_PASSWORD: confluent
      MYSQL_DATABASE: connect_test
  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    depends_on:
      - zookeeper
      - kafka01.internal-service
      - kafka02.internal-service
      - kafka03.internal-service
    ports:
      - '8081:8081'
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper.internal-service:2181
  kafka-connect:
    build: kafka-connect
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka01.internal-service:9092,kafka02.internal-service:9093,kafka03.internal-service:9094
      CONNECT_REST_ADVERTISED_PORT: 8083
      CONNECT_BOOTSTRAP_SERVERS: kafka01.internal-service:9092,kafka02.internal-service:9093,kafka03.internal-service:9094
      CONNECT_GROUP_ID: connect
      CONNECT_CONFIG_STORAGE_TOPIC: connect-config
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offset
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMA_IGNORE: "true"
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_LOGGERS: org.reflections=ERROR
      CONNECT_PLUGIN_PATH: /usr/share/java,/etc/kafka-connect/jars
    depends_on:
      - elasticsearch
      - kafka01.internal-service
      - schema-registry
      - mysql